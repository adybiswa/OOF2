Rename copy_extension.py to "oof2_extension_setup.py".  Install it
into bin when OOF2 is installed.  It should know OOF2_PYTHON3_VERSION
and OOF2_SWIG_VERSION, and CMAKE_INSTALL_PREFIX from the OOF2 build.
Make oof2_extension_setup executable

Install the templates into <prefix>/share/oof2/templates.

oof2_extension_setup will create files in its current directory and
copy files from the share directory.

Files in <prefix>/share/oof2/templates:
   CMakeLists.txt
   README
   template-name/     [for each template]
       CMakeLists.txt
       template-name.C
       template-name.h
       template-name.swg
       template-name.spy

In the directory where oof2_extension_setup is run, create:
  README
  module/
     CMakeLists.txt
     source/
        CMakeLists.txt
        module.C
        module.h
        module.swg
        module.spy
     build/

DON'T overwrite files in module if they already exist, because that
would overwrite the user's edits, unless --force is given.

Without --force, if the module already exists, don't do anything.  If
the top CMakeLists.txt and/or README exist but the module doesn't,
don't replace them, but do install the module.

Can the new CMakeLists.txt files reuse things from the oof2
CMakeLists.txt?

