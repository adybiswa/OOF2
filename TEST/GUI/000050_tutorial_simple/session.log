OOF.Windows.Graphics.New()
OOF.Graphics_1.Settings.New_Layer_Policy(policy='Single')
OOF.Microstructure.Create_From_ImageFile(filename='examples/cyallow.png', microstructure_name='cyallow.png', height=automatic, width=automatic)
OOF.Image.AutoGroup(image='cyallow.png:cyallow.png', name_template='%c')
OOF.PixelGroup.Rename(microstructure='cyallow.png', group='#00ffff', new_name='cyan')
OOF.PixelGroup.Rename(microstructure='cyallow.png', group='#ffff00', new_name='yellow')
OOF.Material.New(name='yellow-material', material_type='bulk')
OOF.Material.New(name='cyan-material', material_type='bulk')
OOF.Property.Copy(property='Mechanical:Elasticity:Isotropic', new_name='yellow_elasticity')
OOF.Property.Parametrize.Mechanical.Elasticity.Isotropic.yellow_elasticity(cijkl=IsotropicRank4TensorEnu(young=1,poisson=0.3))
OOF.Material.Add_property(name='yellow-material', property='Mechanical:Elasticity:Isotropic:yellow_elasticity')
OOF.Property.Copy(property='Mechanical:Elasticity:Isotropic:yellow_elasticity', new_name='cyan_elasticity')
OOF.Property.Parametrize.Mechanical.Elasticity.Isotropic.cyan_elasticity(cijkl=IsotropicRank4TensorEnu(young=0.5,poisson=0.3))
OOF.Material.Add_property(name='cyan-material', property='Mechanical:Elasticity:Isotropic:cyan_elasticity')
OOF.Material.Remove_property(name='cyan-material', property='Mechanical:Elasticity:Isotropic:cyan_elasticity')
OOF.Material.Add_property(name='cyan-material', property='Mechanical:Elasticity:Isotropic:cyan_elasticity')
OOF.Property.Copy(property='Color', new_name='yellow')
OOF.Property.Parametrize.Color.yellow(color=RGBAColor(red=1,green=0.8,blue=0,alpha=1))
OOF.Material.Add_property(name='yellow-material', property='Color:yellow')
OOF.Property.Copy(property='Color', new_name='cyan')
OOF.Property.Parametrize.Color.cyan(color=RGBAColor(red=0,green=0.8,blue=1,alpha=1))
OOF.Material.Add_property(name='cyan-material', property='Color:cyan')
OOF.Material.Assign(material='yellow-material', microstructure='cyallow.png', pixels='yellow')
OOF.Graphics_1.Layer.New(category='Microstructure', what='cyallow.png', how=MicrostructureMaterialDisplay(no_material=TranslucentGray(value=0.0,alpha=1.0),no_color=RGBAColor(red=0.0,green=0.0,blue=1.0,alpha=1.0)))
OOF.Graphics_1.Layer.Hide(n=1)
OOF.Graphics_1.Layer.Show(n=1)
OOF.Material.Assign(material='cyan-material', microstructure='cyallow.png', pixels='cyan')
OOF.Skeleton.New(name='skeleton', microstructure='cyallow.png', x_elements=4, y_elements=4, skeleton_geometry=QuadSkeleton(left_right_periodicity=False,top_bottom_periodicity=False))
OOF.Skeleton.Modify(skeleton='cyallow.png:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=AverageEnergy(alpha=1)))
OOF.Mesh.New(name='mesh', skeleton='cyallow.png:skeleton', element_types=['D2_2', 'T3_3', 'Q4_4'])
OOF.Subproblem.Field.Define(subproblem='cyallow.png:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='cyallow.png:skeleton:mesh:default', field=Displacement)
OOF.Mesh.Field.In_Plane(mesh='cyallow.png:skeleton:mesh', field=Displacement)
OOF.Subproblem.Equation.Activate(subproblem='cyallow.png:skeleton:mesh:default', equation=Force_Balance)
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='cyallow.png:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='left'))
OOF.Mesh.Boundary_Conditions.New(name='bc<2>', mesh='cyallow.png:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='bottom'))
OOF.Mesh.Boundary_Conditions.New(name='bc<3>', mesh='cyallow.png:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=10),boundary='right'))
OOF.Subproblem.Set_Solver(subproblem='cyallow.png:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Solve(mesh='cyallow.png:skeleton:mesh', endtime=0.0)
OOF.Graphics_1.Layer.Select(n=6)
OOF.Graphics_1.Layer.Edit(n=6, category='Mesh', what='cyallow.png:skeleton:mesh', how=FilledContourDisplay(when=latest,what=getOutput('Field:Component',component='x',field=Displacement),where=getOutput('original'),min=automatic,max=automatic,levels=11,nbins=5,colormap=ThermalMap()))
OOF.Mesh.Boundary_Conditions.Edit(name='bc<3>', mesh='cyallow.png:skeleton:mesh', condition=NeumannBC(flux=Stress,profile=[ConstantProfile(value=0.0), ConstantProfile(value=0.01)],boundary='top',normal=False))
OOF.Mesh.Solve(mesh='cyallow.png:skeleton:mesh', endtime=0.0)
OOF.Graphics_1.Layer.Edit(n=6, category='Mesh', what='cyallow.png:skeleton:mesh', how=FilledContourDisplay(when=latest,what=getOutput('Field:Component',component='x',field=Displacement),where=getOutput('actual'),min=automatic,max=automatic,levels=11,nbins=5,colormap=ThermalMap()))
OOF.Graphics_1.Layer.Reorder_All()
