# -*- python -*-

# This software was produced by NIST, an agency of the U.S. government,
# and by statute is not subject to copyright in the United States.
# Recipients of this software assume all responsibilities associated
# with its operation, modification and maintenance. However, to
# facilitate maintenance we ask that before distributing modified
# versions of this software, you first contact the authors at
# oof_manager@nist.gov.

from ooflib.common import debug
from ooflib.common import utils

def _Equation___hash_(self):
    return self.objectid()

Equation.__hash__ = _Equation___hash_

# Equations are sometimes stored in an OrderedSet and need to have
# __lt__ defined.

def _Equation___lt__(self, other):
    try:
        return self.objectid() < other.objectid()
    except:
        return NotImplemented

Equation.__lt__ = _Equation___lt__

def _Equation___hash__(self):
    return self.objectid()

Equation.__hash__ = _Equation___hash__

Equation.__repr__ = Equation.name


DivergenceEquation.__repr__ = DivergenceEquation.name

PlaneFluxEquation.__repr__ = PlaneFluxEquation.name

def allEquations():
    for indx in range(countEquations()):
        yield getEquationByIndex(indx)
    
# getEquation(name) returns the equation with the given name.
# Equation.getEquation is a static C++ method.
getEquation = Equation.getEquation
utils.OOFdefine('getEquation', Equation.getEquation)

