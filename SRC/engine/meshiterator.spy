# -*- python -*-

# This software was produced by NIST, an agency of the U.S. government,
# and by statute is not subject to copyright in the United States.
# Recipients of this software assume all responsibilities associated
# with its operation, modification and maintenance. However, to
# facilitate maintenance we ask that before distributing modified
# versions of this software, you first contact the authors at
# oof_manager@nist.gov.

from ooflib.common import debug

def _VContainerNode___iter__(self):
    cbegin = self.c_begin()
    cend = self.c_end()
    while cbegin != cend:
        yield cbegin.node()
        cbegin.increment()

VContainerNode.__iter__ = _VContainerNode___iter__
VContainerFuncNode.__iter__ = _VContainerNode___iter__

def _VContainerElement___iter__(self):
    cbegin = self.c_begin()
    cend = self.c_end()
    while cbegin != cend:
        yield cbegin.element()
        cbegin.increment()

VContainerElement.__iter__ = _VContainerElement___iter__
VContainerInterfaceElement.__iter__ = _VContainerElement___iter__

#=--=##=--=##=--=##=--=##=--=##=--=##=--=##=--=##=--=##=--=##=--=#

# # FuncNodeVector is just a typedef for std::vector<FuncNode>.  Swig
# # does *not* convert it to a python vector, but it adds an __iter__
# # method so that its entries can be accessed.

# def _FuncNodeVector___iter__(self):
#     begin = self.begin()
#     end = self.end()
#     while begin != end:
#         yield begin.funcnode()
#         begin.increment()

# FuncNodeVector.__iter__ = _FuncNodeVector___iter__
