# -*- python -*-

# This software was produced by NIST, an agency of the U.S. government,
# and by statute is not subject to copyright in the United States.
# Recipients of this software assume all responsibilities associated
# with its operation, modification and maintenance. However, to
# facilitate maintenance we ask that before distributing modified
# versions of this software, you first contact the authors at
# oof_manager@nist.gov. 

import math
from ooflib.common import debug

# __getitem__ is used when a COrientation is acting as an OutputVal,
# and one of its components is being retrieved by the GUI
# (particularly a MeshDataGUI object).  Since we use degrees in Python
# and radians in C++ (whose dumb idea was that?), it's necessary to
# convert here.  However, not all COrientation components are angles,
# so some subclasses need specialized __getitem__ methods.  This is
# ugly.

# The default __getitem__ assumes all components are angles.

def COrientation__getitem__(self, index):
    # index is an IndexP
    component_name = index.shortrepr()
    retrievalfn = getattr(self, component_name)
    return math.degrees(retrievalfn())

COrientation.__getitem__ = COrientation__getitem__

# No Quaternion or Rodrigues component is an angle.

def noangles__getitem__(self, index):
    component_name = index.shortrepr()
    retrievalfn = getattr(self, component_name)
    return retrievalfn()

COrientQuaternion.__getitem__ = noangles__getitem__
COrientRodrigues.__getitem__ = noangles__getitem__

# Only the 'angle' component of COrientAxis is an angle.

def COrientAxis__getitem__(self, index):
    component_name = index.shortrepr()
    retrievalfn = getattr(self, component_name)
    if component_name == "angle":
        return math.degrees(retrievalfn())
    return retrievalfn()

COrientAxis.__getitem__ = COrientAxis__getitem__


