# -*- python -*-

# This software was produced by NIST, an agency of the U.S. government,
# and by statute is not subject to copyright in the United States.
# Recipients of this software assume all responsibilities associated
# with its operation, modification and maintenance. However, to
# facilitate maintenance we ask that before distributing modified
# versions of this software, you first contact the authors at
# oof_manager@nist.gov.

# The PropertyOutputRegistration subclasses create an Output object
# for each registered PropertyOutput.  This bridges the gap between
# the C++ PropertyOutputs and the more general Python Outputs.

from ooflib.common import debug

class PORegBase(PropertyOutputRegistration):
    ## Callback for all PropertyOutputs.  Outputs that need to return
    ## something other than a list of OutputVal instances should
    ## override the convert method.
    def opfunc(self, mesh, elements, coords, **params):
        po = self.instantiate(params)
        mesh.precompute_all_subproblems()
        initializer = self.initializer()
        results = []
        for element, ecoords, in zip(elements, coords):
            mat = element.material()
            mesh.begin_all_subproblems(element)
            results.extend(po.evaluate(mesh, element, initializer, ecoords))
            mesh.end_all_subproblems(element)
        return self.convert(results)
    def convert(self, results):
        return results
    
