# -*- python -*-

# This software was produced by NIST, an agency of the U.S. government,
# and by statute is not subject to copyright in the United States.
# Recipients of this software assume all responsibilities associated
# with its operation, modification and maintenance. However, to
# facilitate maintenance we ask that before distributing modified
# versions of this software, you first contact the authors at
# oof_manager@nist.gov. 

from ooflib.SWIG.common import config
from ooflib.common.IO import parameter
from ooflib.common import primitives

if config.dimension() == 2:
    CoordPtr.__repr__ = lambda self:"Coord(%s,%s)" % (self[0],self[1])
    ICoordPtr.__repr__ = lambda self: "ICoord(%d,%d)" % (self[0], self[1])
elif config.dimension() == 3:
    CoordPtr.__repr__ = lambda self:"Coord(%s,%s,%s)" % (self[0],self[1],self[2])
    ICoordPtr.__repr__ = lambda self: "ICoord(%d,%d,%d)" % (self[0], self[1],self[2])
    

# Add argument checking to the swigged getitem method.
def _Coord___getitem__(self, indx):
    if indx >= config.dimension() or indx < 0:
        raise IndexError
    return self.getitem(indx)

CoordPtr.__getitem__ = _Coord___getitem__

def _Coord___lt__(self, other):
    try:
        return (self[0] < other[0] or
                (self[0] == other[0] and self[1] < other[1]))

CoordPtr.__lt__ = _Coord___lt__

def _Coord___hash__(self):
    return hash((self[0], self[1]))

CoordPtr.__hash__ = _Coord___hash__

class CoordParameter(parameter.Parameter):
    types=(primitives.Point, Coord)
    
